#DRD-FILE
#SEE DRD_HF_coronation_events.txt: additional events for the coronation chain.

namespace=DRD  # 200-499
# 200-299: pre-coronation requests, RH reactions.
# 300-399: pre-coronation request acceptance, rejection & fulfillment.
# 400-499: other, e.g coronation ceremony, rh_protection related events.

letter_event = {  # ROOT = temporal RH, FROM = ruler requesting their full sanction.
	id = DRD.200
	desc = {
		text = EVTDESCDRD200_not_under_ruler
		trigger = {
			NOR = {
				is_vassal_or_below_of = FROM
				is_tributary = { suzerain = FROM }
			}
		}
	}
	desc = {
		text = EVTDESCDRD200_ruler_is_liege_or_suzerain
		trigger = {
			OR = {
				is_vassal_or_below_of = FROM
				is_tributary = { suzerain = FROM }
			}
		}
	}
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }

	immediate = {
		if = {  # Compute the prestige hit that will be applied at the end of the coronation chain.
			limit = { NOT = { is_variable_equal = { which = local_fylkir_prestige_cost value = 0 } } }
			if = {
				limit = { relative_power = { who = FROM power = 1.5 } }
				set_variable = { which = local_fylkir_prestige_cost value = 5000 }
			}
			else_if = {
				limit = { relative_power = { who = FROM power = 1 } }
				set_variable = { which = local_fylkir_prestige_cost value = 3000 }
			}
			else_if = {
				limit = { relative_power = { who = FROM power = 0.75 } }
				set_variable = { which = local_fylkir_prestige_cost value = 2000 }
			}
			else_if = {
				limit = { relative_power = { who = FROM power = 0.5 } }
				set_variable = { which = local_fylkir_prestige_cost value = 1200 }
			}
			else_if = {
				limit = { relative_power = { who = FROM power = 0.25 } }
				set_variable = { which = local_fylkir_prestige_cost value = 600 }
			}
			else = {
				set_variable = { which = local_fylkir_prestige_cost value = 300 }
			}
			if = {
				limit = { independent = yes }
				if = {
					limit = { is_tributary = no }
					change_variable = { which = local_fylkir_prestige_cost value = 400 }
				}
				else_if = {
					limit = { NOT = { is_tributary = { suzerain = FROM type = rh_protection } } }
					change_variable = { which = local_fylkir_prestige_cost value = 200 }
				}
			}
			if = {  # Base value is capped at 100 + 40% of current prestige (if positive).
				limit = { prestige = 0 }
				export_to_variable = { which = local_fylkir_prestige_max value = prestige }
				multiply_variable = { which = local_fylkir_prestige_max value = 0.4 }
			}
			change_variable = { which = local_fylkir_prestige_max value = 100 }
			if = {
				check_variable = { which = local_fylkir_prestige_max which = local_fylkir_prestige_cost }
				set_variable = { which = local_fylkir_prestige_cost which = local_fylkir_prestige_max }
			}
			if = {  # Then x2 if same tier.
				limit = { NOT = { is_lower_tier_than = FROM } }
				multiply_variable = { which = local_fylkir_prestige_cost value = 2 }
			}
		}
		if = {  # If FROM has already fulfilled a request, proceed with the coronation.
			limit = { has_opinion_modifier = { who = FROM modifier = drd_opinion_fulfilled_request } }
			hidden_tooltip = { FROM = { letter_event = { id = DRD.399 } } }
		}
		#TODO AI weights: chance to only consider "reasonable" requests to a liege or suzerain.
	}

	option = {  # Political requests: independence, protection, overthrowing self-crowned ruelrs.
		name = {
			text = EVTOPTADRD200_independent
			trigger = {
				independent = yes
				is_tributary = no
			}
		}
		name = {
			text = EVTOPTADRD200_ruler_is_protector
			trigger = {
				independent = yes
				is_tributary = { suzerain = FROM type = rh_protection }
			}
		}
		name = {
			text = EVTOPTADRD200_ruler_is_liege_or_suzerain
			trigger = {
				OR = {
					is_vassal_or_below_of = FROM
					AND = {
						is_tributary = { suzerain = FROM }
						NOT = { is_tributary = { type = rh_protection } }
					}
				}
			}
		}
		name = {
			text = EVTOPTADRD200_foreign_protector
			trigger = {
				independent = yes
				is_tributary = { type = rh_protection }
				NOT = { is_tributary = { suzerain = FROM } }
			}
		}
		name = {
			text = EVTOPTADRD200_foreign_liege_or_suzerain
			trigger = {
				OR = {
					AND = {
						independent = no
						NOT = { is_vassal_or_below_of = FROM }
					}
					AND = {
						is_tributary = yes
						NOT = { is_tributary = { suzerain = FROM } }
						NOT = { is_tributary = { type = rh_protection } }
					}
				}
			}
		}
		trigger = { NOT = { has_opinion_modifier = { who = FROM modifier = drd_opinion_fulfilled_request } } }
		hidden_tooltip = { repeat_event = { id = DRD.201 } }
	}

	option = {  # Land requests: either from their own realm, or a war of conquest in your name.
		name = EVTOPTBDRD200
		trigger = {  # Available if tributary, but not vassal, of a foreign ruler.
			NOT = { has_opinion_modifier = { who = FROM modifier = drd_opinion_fulfilled_request } }
			OR = {
				independent = yes
				is_vassal_or_below_of = FROM
			}
		}
		hidden_tooltip = { repeat_event = { id = DRD.202 } }
	}

	option = {  # Other requests: money, artifact...
		name = EVTOPTCDRD200
		trigger = { NOT = { has_opinion_modifier = { who = FROM modifier = drd_opinion_fulfilled_request } } }
		hidden_tooltip = { repeat_event = { id = DRD.203 } }
	}

	option = {  # Refuse. Default response unless FROM is your liege or suzerain.
		name = EVTOPTDDRD200
		trigger = { NOT = { has_opinion_modifier = { who = FROM modifier = drd_opinion_fulfilled_request } } }
		if = {
			limit = { has_opinion_modifier = { who = FROM modifier = drd_opinion_refused_reasonable_request } }
			hidden_tooltip = { remove_opinion = { who = FROM modifier = drd_opinion_refused_reasonable_request } }
			opinion = { who = FROM modifier = drd_opinion_refused_reasonable_request }
		}
		else_if = {
			limit = {
				OR = {
					is_vassal_or_below_of = FROM
					is_tributary = { suzerain = FROM }
				}
			}
			tooltip = {
				reverse_opinion = { who = FROM modifier = drd_opinion_refused_to_crown_me }
				if = {
					limit = { is_tributary = { suzerain = FROM type = rh_protection } }
					FROM = { remove_tributary = ROOT }
				}
			}
		}
		else = {
			hidden_tooltip = { reverse_opinion = { who = FROM modifier = drd_opinion_made_unreasonable_request } }
		}
		hidden_tooltip = { FROM = { letter_event = { id = DRD.398 } } }
	}
	option = {  # No choice, FROM already fulfilled your request.
		name = EVTOPTEDRD200
		trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_fulfilled_request } }
	}
}

letter_event = {
	id = DRD.201
	desc = {
		text = EVTDESCDRD200_not_under_ruler
		trigger = {
			NOR = {
				is_vassal_or_below_of = FROM
				is_tributary = { suzerain = FROM }
			}
		}
	}
	desc = {
		text = EVTDESCDRD200_ruler_is_liege_or_suzerain
		trigger = {
			OR = {
				is_vassal_or_below_of = FROM
				is_tributary = { suzerain = FROM }
			}
		}
	}
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }

	option = {  # Ask for autonomy under FROM's protection. Reasonable unless it requires a war or FROM is liege.
		name = {
			text = EVTOPTADRD201_independent
			trigger = {
				independent = yes
				is_tributary = no
			}
		}
		name = {
			text = EVTOPTADRD201_ruler_is_protector
			trigger = {
				independent = yes
				is_tributary = { suzerain = FROM type = rh_protection }
			}
		}
		name = {
			text = EVTOPTADRD201_ruler_is_liege_or_suzerain
			trigger = {
				OR = {
					is_vassal_or_below_of = FROM
					AND = {
						is_tributary = { suzerain = FROM }
						NOT = { is_tributary = { suzerain = FROM type = rh_protection } }
					}
				}
			}
		}
		name = {
			text = EVTOPTADRD201_foreign_protector
			trigger = {
				independent = yes
				is_tributary = { type = rh_protection }
				NOT = { is_tributary = { suzerain = FROM } }
			}
		}
		name = {
			text = EVTOPTADRD201_foreign_liege_or_suzerain
			trigger = {
				OR = {
					AND = {
						independent = no
						NOT = { is_vassal_or_below_of = FROM }
					}
					AND = {
						is_tributary = yes
						NOT = { is_tributary = { suzerain = FROM } }
						NOT = { is_tributary = { type = rh_protection } }
					}
				}
			}
		}
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			is_landed = yes
		}
		if = {
			limit = {
				OR = {
					AND = {
						independent = yes
						is_tributary = no
					}
					is_vassal_or_below_of = FROM
					is_tributary = { suzerain = FROM }
					is_tributary = { type = rh_protection }
				}
			}
			hidden_tooltip = {
				remove_opinion = { who = FROM modifier = drd_opinion_making_request }
				if = {
					limit = { independent = yes }
					set_variable = { which = local_request_reasonable value = 1 }
				}
				FROM = { letter_event = { id = DRD.300 } }
			}
		}
		else = {  #TODO: would require a war.
			hidden_tooltip = { repeat_event = { id = DRD.200 } }
		}
	}

	option = {  # Ask for full independence.
		name = {
			text = EVTOPTBDRD201_ruler_is_liege_or_suzerain
			trigger = {
				OR = {
					is_vassal_or_below_of = FROM
					is_tributary = { suzerain = FROM }
				}
			}
		}
		name = {
			text = EVTOPTBDRD201_foreign_liege_or_suzerain
			trigger = {
				NOR = {
					is_vassal_or_below_of = FROM
					is_tributary = { suzerain = FROM }
				}
			}
		}
		trigger = {  # Cannot request to be freed from a protector you can leave anytime you want.
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			is_landed = yes
			OR = {
				independent = no
				AND = {
					is_tributary = yes
					NOT = { is_tributary = { type = rh_protection } }
				}
			}
		}
		if = {
			limit = {
				OR = {
					is_vassal_or_below_of = FROM
					is_tributary = { suzerain = FROM }
				}
			}
			hidden_tooltip = {
				remove_opinion = { who = FROM modifier = drd_opinion_making_request }
				FROM = { letter_event = { id = DRD.301 } }
			}
		}
		else = {  #TODO: would require a war.
			hidden_tooltip = { repeat_event = { id = DRD.200 } }
		}
	}

	option = {  # Overthrow a self-crowned ruler. Reasonable.
		name = EVTOPTCDRD201
		trigger = {  #TODO
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			always = no
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			set_variable = { which = local_request_reasonable value = 1 }
		}
	}

	option = {  # Go back.
		name = EVTOPTZDRD200
		hidden_tooltip = { repeat_event = { id = DRD.200 } }
		ai_chance = { factor = 0 }
	}
}

letter_event = {
	id = DRD.202
	desc = {
		text = EVTDESCDRD200_not_under_ruler
		trigger = {
			NOR = {
				is_vassal_or_below_of = FROM
				is_tributary = { suzerain = FROM }
			}
		}
	}
	desc = {
		text = EVTDESCDRD200_ruler_is_liege_or_suzerain
		trigger = {
			OR = {
				is_vassal_or_below_of = FROM
				is_tributary = { suzerain = FROM }
			}
		}
	}
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }

	immediate = {
		FROM = {
			random_demesne_title = {
				limit = {
					can_be_given_away = yes
					tier = COUNT
					is_feudal = yes
					location = {
						is_capital = no
					}
				}
				preferred_limit = {
					ROOT = { is_landed = yes }
					location = {
						any_neighbor_province = {
							owner = {
								OR = {
									character = ROOT
									is_vassal_or_below_of = ROOT
								}
							}
						}
					}
				}
				preferred_limit = {
					any_province_holding = { is_holy_site = ROOT }
				}
				preferred_limit = {
					ROOT = { independent = yes }
					location = {
						any_neighbor_province = {
							owner = {
								NOR = {
									character = FROM
									is_vassal_or_below_of = FROM
									is_tributary = { suzerain = FROM }
								}
							}
						}
					}
				}
				save_event_target_as = request_county
			}
			if = {
				limit = { is_landed = yes }
				random_realm_province = {
					limit = {
						duchy = {
							NOT = {
								any_direct_de_jure_vassal_title = {
									location = { is_capital = yes }
									owner = {
										tier = KING
										OR = {
											character = FROM
											is_vassal_or_below_of = FROM
										}
									}
								}
							}
							OR = {
								has_holder = no
								owner = { character = ROOT }
								AND = {
									owner = { character = FROM }
									can_be_given_away = yes
								}
							}
						}
					}
					preferred_limit = {
						duchy = {
							owner = { character = ROOT }
						}
					}
					preferred_limit = {
						any_neighbor_province = {
							owner = {
								OR = {
									character = ROOT
									is_vassal_or_below_of = ROOT
								}
							}
						}
					}
					preferred_limit = {
						duchy = { any_de_jure_vassal_title = { is_holy_site = ROOT } }
					}
					preferred_limit = {
						ROOT = {
							capital_scope = {
								can_naval_path_to = PREVPREV
							}
						}
					}
					duchy = { save_event_target_as = request_duchy }
				}
			}
		}
	}

	option = {  # Ask for a county directly controlled by FROM. Reasonable if unlanded.
		name = EVTOPTADRD202
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_county = { can_be_given_away = yes }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			if = {
				limit = { is_landed = no }
				set_variable = { which = local_request_reasonable value = 1 }
			}
			event_target:request_county = { save_event_target_as = request_title }
			FROM = { letter_event = { id = DRD.302 } }
		}
	}

	option = {  # Ask for a duchy within FROM's realm.
		name = EVTOPTBDRD202
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			is_landed = yes
			event_target:request_duchy = {
				OR = {
					has_holder = no
					can_be_given_away = yes
				}
			}
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_duchy = { save_event_target_as = request_title }
			FROM = { letter_event = { id = DRD.302 } }
		}
	}

	option = {  # Ask for a duchy controlled by an infidel.
		name = EVTOPTCDRD202
		trigger = {  #TODO: would require a war.
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			is_pacifist = no
			always = no
		}
	}

	option = {  # Go back.
		name = EVTOPTZDRD200
		hidden_tooltip = { repeat_event = { id = DRD.200 } }
		ai_chance = { factor = 0 }
	}

	after = {
		clear_event_target = request_county
		clear_event_target = request_duchy
	}
}

letter_event = {
	id = DRD.203
	desc = {
		text = EVTDESCDRD200_not_under_ruler
		trigger = {
			NOR = {
				is_vassal_or_below_of = FROM
				is_tributary = { suzerain = FROM }
			}
		}
	}
	desc = {
		text = EVTDESCDRD200_ruler_is_liege_or_suzerain
		trigger = {
			OR = {
				is_vassal_or_below_of = FROM
				is_tributary = { suzerain = FROM }
			}
		}
	}
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }

	immediate = {
		# Small money request: highest between 0.5x the ruler's yearly income and 300.
		# Large money request: 3x the lowest yearly income between ruler and head, unused if lower than the above.
		export_to_variable = { which = local_max_request_money value = yearly_income }
		FROM = { export_to_variable = { which = local_min_request_money value = yearly_income } }
		if = {
			limit = { check_variable = { which = local_max_request_money which = local_min_request_money } }
			set_variable = { which = local_max_request_money which = local_min_request_money }
		}
		multiply_variable = { which = local_max_request_money value = 3 }
		multiply_variable = { which = local_min_request_money value = 0.5 }
		if = {
			limit = { NOT = { check_variable = { which = local_min_request_money value = 300 } } }
			set_variable = { which = local_min_request_money value = 300 }
		}
		
		any_demesne_title = {
			limit = { controls_religion = yes }
			persistent_event_target:rh_artifact = {
				if = {
					limit = { NOT = { owner = { character = ROOT } } }
					save_event_target_as = request_lost_rh_artifact
				}
			}
		}
		FROM = {
			random_artifact = {
				limit = { artifact_can_be_gifted_to = ROOT }  # Artifact crowns are never allowed as gifts.
				preferred_limit = {
					has_flag = religious
					original_owner = { religion = ROOT }
				}
				preferred_limit = { quality = 3 }
				preferred_limit = { quality = 2 }
				preferred_limit = {
					has_flag = about_religion
					original_owner = { religion = ROOT }
				}
				save_event_target_as = request_random_artifact
			}
		}
	}

	option = {  # FROM has our crown, ask them to return it. Reasonable.
		name = EVTOPTADRD203_give_artifact
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_lost_rh_artifact = { owner = { character = FROM } }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			set_variable = { which = local_request_reasonable value = 1 }
			event_target:request_lost_rh_artifact = { save_event_target_as = request_artifact }
			FROM = { letter_event = { id = DRD.304 } }
		}
	}

	option = {  #TODO Ask FROM to retrieve our lost crown. Reasonable.
		name = EVTOPTADRD203_retrieve_artifact
		trigger = {
			always = no
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_lost_rh_artifact = { owner = { NOT = { character = FROM } } }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			set_variable = { which = local_request_reasonable value = 1 }
			event_target:request_lost_rh_artifact = { save_event_target_as = request_artifact }
			hidden_tooltip = { repeat_event = { id = DRD.200 } }
		}
	}

	option = {  # Ask for a reasonable amount of money.
		name = EVTOPTBDRD203
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			set_variable = { which = local_request_reasonable value = 1 }
			set_variable = { which = local_request_money which = local_min_request_money }
			FROM = { letter_event = { id = DRD.303 } }
		}
	}

	option = {  # Ask for a large amount of money, if strictly larger than the above.
		name = EVTOPTCDRD203
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			NOT = { check_variable = { which = local_min_request_money which = local_max_request_money } }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			set_variable = { which = local_request_money which = local_max_request_money }
			FROM = { letter_event = { id = DRD.303 } }
		}
	}

	option = {  # Ask for an artifact.
		name = EVTOPTDDRD203
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_random_artifact = { artifact_can_be_gifted_to = ROOT }
			NAND = {  # Disabled if 3 choices are already available.
				event_target:request_lost_rh_artifact = { always = yes }
				NOT = { check_variable = { which = local_min_request_money which = local_max_request_money } }
			}
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_random_artifact = { save_event_target_as = request_artifact }
			FROM = { letter_event = { id = DRD.304 } }
		}
	}

	option = {  # Go back.
		name = EVTOPTZDRD200
		hidden_tooltip = { repeat_event = { id = DRD.200 } }
		ai_chance = { factor = 0 }
	}

	after = {
		set_variable = { which = local_min_request_money value = 0 }
		set_variable = { which = local_max_request_money value = 0 }
		clear_event_target = request_lost_rh_artifact
		clear_event_target = request_random_artifact
	}
}

character_event = {  # Request was rejected (notification). ROOT = temporal RH, FROM = ruler.
	id = DRD.210
	desc = EVTDESCDRD210

	is_triggered_only = yes
	notification = yes

	option = {
		name = OK
	}
}

letter_event = {  # Request was rejected and the ruler withdraws protection. ROOT = temporal RH, FROM = ruler.
	id = DRD.211
	desc = EVTDESCDRD211
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	is_hostile = yes

	option = {
		name = OK
	}
}

character_event = {  # Request was accepted (notification). ROOT = temporal RH, FROM = ruler.
	id = DRD.212
	desc = EVTDESCDRD212

	is_triggered_only = yes
	notification = yes

	option = {
		name = OK
	}
}

letter_event = {  # Request for protection or independence was accepted. ROOT = temporal RH, FROM = ruler.
	id = DRD.213
	desc = {
		text = EVTDESCDRD213_protection
		trigger = {
			is_tributary = { type = rh_protection suzerain = FROM }
		}
	}
	desc = {
		text = EVTDESCDRD213_independence
		trigger = {
			NOT = { is_tributary = { type = rh_protection suzerain = FROM } }
		}
	}

	is_triggered_only = yes
	is_friendly = yes

	option = {
		name = OK
	}
}

character_event = {  # Automatic answer after two months.
	id = DRD.299
	desc = {
		text = EVTDESCDRD299_not_under_ruler
		trigger = {
			NOR = {
				is_vassal_or_below_of = FROM
				is_tributary = { suzerain = FROM }
			}
		}
	}
	desc = {
		text = EVTDESCDRD299_ruler_is_liege_or_suzerain
		trigger = {
			OR = {
				is_vassal_or_below_of = FROM
				is_tributary = { suzerain = FROM }
			}
		}
	}
	picture = GFX_evt_bishop
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }

	immediate = {
		remove_opinion = { who = FROM modifier = drd_opinion_making_request }
		set_variable = { which = local_request_reasonable value = 1 }
		if = {  # Vassals request money.
			limit = { is_vassal_or_below_of = FROM }
			FROM = { export_to_variable = { which = local_request_money value = yearly_income } }
			multiply_variable = { which = local_request_money value = 0.5 }
			if = {
				limit = { NOT = { check_variable = { which = local_request_money value = 300 } } }
				set_variable = { which = local_request_money value = 300 }
			}
			FROM = { letter_event = { id = DRD.303 } }
		}
		else_if = {  # Tributaries request protection.
			limit = { is_tributary = { suzerain = FROM } }
			FROM = { letter_event = { id = DRD.300 } }
		}
		else = {  # Otherwise, refuse to crown.
			FROM = { letter_event = { id = DRD.398 } }
		}
	}

	option = {
		name = OK
	}
}

letter_event = {  # Request for protection. ROOT = ruler, FROM = temporal RH.
	id = DRD.300
	desc = {
		text = EVTDESCDRD300_independent
		trigger = {
			FROM = {
				independent = yes
				is_tributary = no
			}
		}
	}
	desc = {
		text = EVTDESCDRD300_ruler_is_protector
		trigger = {
			FROM = {
				independent = yes
				is_tributary = { type = rh_protection suzerain = ROOT }
			}
		}
	}
	desc = {
		text = EVTDESCDRD300_ruler_is_liege_or_suzerain
		trigger = {
			FROM = {
				OR = {
					is_vassal_or_below_of = ROOT
					AND = {
						is_tributary = { suzerain = ROOT }
						NOT = { is_tributary = { suzerain = ROOT type = rh_protection } }
					}
				}
			}
		}
	}
	desc = {
		text = EVTDESCDRD300_foreign_protector
		trigger = {
			FROM = {
				independent = yes
				NOT = { is_tributary = { suzerain = ROOT } }
				is_tributary = { type = rh_protection }
			}
		}
	}
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = {
		name = {
			text = EVTOPTADRD300_independent_or_foreign_protector
			trigger = {
				FROM = {
					independent = yes
					OR = {
						is_tributary = no
						NOT = { is_tributary = { suzerain = ROOT } }
					}
				}
			}
		}
		name = {
			text = EVTOPTADRD300_ruler_is_liege_or_suzerain
			trigger = {
				FROM = {
					OR = {
						is_vassal_or_below_of = ROOT
						AND = {
							is_tributary = { suzerain = ROOT }
							NOT = { is_tributary = { suzerain = ROOT type = rh_protection } }
						}
					}
				}
			}
		}
		name = {
			text = EVTOPTADRD300_ruler_is_protector
			trigger = {
				FROM = {
					is_tributary = { suzerain = ROOT type = rh_protection }
				}
			}
		}
		if = {
			limit = { FROM = { is_tributary = { suzerain = ROOT type = rh_protection } } }
			piety = 50
		}
		else = {
			if = {
				limit = { FROM = { independent = no } }
				FROM = { set_defacto_liege = THIS }
			}
			else_if = {
				limit = { FROM = { is_tributary = { suzerain = ROOT } } }
				remove_tributary = FROM
			}
			any_suzerain = {  # Foreign suzerains are removed only if they were protectors.
				limit = {
					NOT = { character = ROOT }
					FROM = { is_tributary = { suzerain = PREV type = rh_protection } }
				}
				remove_tributary = FROM
			}
			make_tributary = { who = FROM tributary_type = rh_protection }
			hidden_tooltip = { FROM = { letter_event = { id = DRD.213 } } }
		}
		hidden_tooltip = { repeat_event = { id = DRD.399 } }
	}

	option = {
		name = {
			text = EVTOPTZDRD300_not_under_ruler
			trigger = {
				FROM = {
					independent = yes
					OR = {
						is_tributary = no
						NOT = { is_tributary = { suzerain = ROOT } }
					}
				}
			}
		}
		name = {
			text = EVTOPTZDRD300_ruler_is_liege_or_suzerain
			trigger = {
				FROM = {
					OR = {
						is_vassal_or_below_of = ROOT
						AND = {
							is_tributary = { suzerain = ROOT }
							NOT = { is_tributary = { suzerain = ROOT type = rh_protection } }
						}
					}
				}
			}
		}
		name = {
			text = EVTOPTZDRD300_ruler_is_protector
			trigger = {
				FROM = {
					is_tributary = { suzerain = ROOT type = rh_protection }
				}
			}
		}
		if = {
			limit = { FROM = { is_tributary = { suzerain = ROOT type = rh_protection } } }
			prestige = -200  # Same cost as the decision to release a tributary.
			remove_tributary = FROM
			hidden_tooltip = { FROM = { letter_event = { id = DRD.211 } } }
		}
		else = {
			hidden_tooltip = { FROM = { character_event = { id = DRD.210 } } }
		}
		if = {
			limit = { check_variable = { which = local_request_reasonable value = 1 } }
			reverse_opinion = { who = FROM modifier = drd_opinion_refused_reasonable_request }
		}
		else = {
			hidden_tooltip = { opinion = { who = FROM modifier = drd_opinion_made_unreasonable_request } }
		}
		custom_tooltip = { text = coronation_canceled }
		ai_chance = { factor = 0 }
	}
}

letter_event = {  # Request for independence. ROOT = ruler, FROM = temporal RH.
	id = DRD.301
	desc = EVTDESCDRD301
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTADRD301
		if = {
			limit = { FROM = { independent = no } }
			FROM = { set_defacto_liege = THIS }
		}
		if = {
			limit = { FROM = { is_tributary = { suzerain = ROOT } } }
			remove_tributary = FROM
		}
		hidden_tooltip = {
			FROM = { letter_event = { id = DRD.213 } }
			repeat_event = { id = DRD.399 }
		}
	}

	option = {
		name = EVTOPTZDRD300_ruler_is_liege_or_suzerain
		hidden_tooltip = { FROM = { character_event = { id = DRD.210 } } }
		custom_tooltip = { text = coronation_canceled }
		ai_chance = { factor = 0 }  #TODO
	}
}

letter_event = {  # Request for event_target:request_title. ROOT = ruler, FROM = temporal RH
	id = DRD.302
	desc = EVTDESCDRD302
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTADRD302
		FROM = {
			liege = { save_event_target_as = previous_liege }
			grant_title = event_target:request_title
			set_defacto_liege = event_target:previous_liege
			event_target:request_title = {
				if = {
					limit = { tier = DUKE }
					any_direct_de_jure_vassal_title = {
						limit = {
							holder_scope = { tier = COUNT }
							location = { is_capital = yes }
						}
						set_defacto_liege = event_target:previous_liege
					}
				}
			}
			hidden_tooltip = { character_event = { id = DRD.212 } }
		}
		hidden_tooltip = { repeat_event = { id = DRD.399 } }
	}

	option = {
		name = {
			text = EVTOPTZDRD300_not_under_ruler
			trigger = {
				FROM = {
					independent = yes
					OR = {
						is_tributary = no
						NOT = { is_tributary = { suzerain = ROOT } }
					}
				}
			}
		}
		name = {
			text = EVTOPTZDRD300_ruler_is_liege_or_suzerain
			trigger = {
				FROM = {
					OR = {
						is_vassal_or_below_of = ROOT
						AND = {
							is_tributary = { suzerain = ROOT }
							NOT = { is_tributary = { suzerain = ROOT type = rh_protection } }
						}
					}
				}
			}
		}
		name = {
			text = EVTOPTZDRD300_ruler_is_protector
			trigger = {
				FROM = {
					is_tributary = { suzerain = ROOT type = rh_protection }
				}
			}
		}
		if = {
			limit = { FROM = { is_tributary = { suzerain = ROOT type = rh_protection } } }
			remove_tributary = FROM
			hidden_tooltip = { FROM = { letter_event = { id = DRD.211 } } }
		}
		else = {
			hidden_tooltip = { FROM = { character_event = { id = DRD.210 } } }
		}
		if = {
			limit = { check_variable = { which = local_request_reasonable value = 1 } }
			reverse_opinion = { who = FROM modifier = drd_opinion_refused_reasonable_request }
		}
		else = {
			hidden_tooltip = { opinion = { who = FROM modifier = drd_opinion_made_unreasonable_request } }
		}
		custom_tooltip = { text = coronation_canceled }
		ai_chance = {
			factor = 0  #TODO
			modifier = {
				factor = 0
				check_variable = { which = local_request_reasonable value = 1 }
			}
		}
	}
}

letter_event = {  # Request for local_request_money ducats. ROOT = ruler, FROM = temporal RH.
	id = DRD.303
	desc = {
		text = EVTDESCDRD303_reasonable
		trigger = { check_variable = { which = local_request_reasonable value = 1 } }
	}
	desc = {
		text = EVTDESCDRD303_unreasonable
		trigger = { NOT = { check_variable = { which = local_request_reasonable value = 1 } } }
	}
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	immediate = {
		set_variable = { which = local_request_money which = local_request_money_neg }
		multiply_variable = { which = local_request_money_neg value = -1 }
	}

	option = {
		name = EVTOPTADRD303
		wealth = local_request_money_neg
		hidden_tooltip = {
			FROM = {
				wealth = local_request_money
				character_event = { id = DRD.212 }
			}
			repeat_event = { id = DRD.399 }
		}
	}

	option = {
		name = {
			text = EVTOPTZDRD300_not_under_ruler
			trigger = {
				FROM = {
					independent = yes
					OR = {
						is_tributary = no
						NOT = { is_tributary = { suzerain = ROOT } }
					}
				}
			}
		}
		name = {
			text = EVTOPTZDRD300_ruler_is_liege_or_suzerain
			trigger = {
				FROM = {
					OR = {
						is_vassal_or_below_of = ROOT
						AND = {
							is_tributary = { suzerain = ROOT }
							NOT = { is_tributary = { suzerain = ROOT type = rh_protection } }
						}
					}
				}
			}
		}
		name = {
			text = EVTOPTZDRD300_ruler_is_protector
			trigger = {
				FROM = {
					is_tributary = { suzerain = ROOT type = rh_protection }
				}
			}
		}
		if = {
			limit = { FROM = { is_tributary = { suzerain = ROOT type = rh_protection } } }
			remove_tributary = FROM
			hidden_tooltip = { FROM = { letter_event = { id = DRD.211 } } }
		}
		else = {
			hidden_tooltip = { FROM = { character_event = { id = DRD.210 } } }
		}
		if = {
			limit = { check_variable = { which = local_request_reasonable value = 1 } }
			reverse_opinion = { who = FROM modifier = drd_opinion_refused_reasonable_request }
		}
		else = {
			hidden_tooltip = { opinion = { who = FROM modifier = drd_opinion_made_unreasonable_request } }
		}
		custom_tooltip = { text = coronation_canceled }
		ai_chance = {
			factor = 0  #TODO
			modifier = {
				factor = 0
				check_variable = { which = local_request_reasonable value = 1 }
				wealth = 0
			}
			modifier = {
				factor = 0.3
				check_variable = { which = local_request_reasonable value = 1 }
			}
			modifier = {
				factor = 0.2
				wealth = local_request_money
			}
		}
	}

	after = {
		set_variable = { which = local_request_money_neg value = 0 }
	}
}

letter_event = {  # Request for event_target:request_artifact. ROOT = ruler, FROM = temporal RH.
	id = DRD.304
	desc = {
		text = EVTDESCDRD304_rh_crown
		trigger = {
			event_target:request_artifact = {
				has_flag = divine_right_regalia
				persistent_event_target:rh_title = {
					holder_scope = { character = FROM }
				}
			}
		}
	}
	desc = {
		text = EVTDESCDRD304_other
		trigger = {
			NOT = {
				event_target:request_artifact = {
					has_flag = divine_right_regalia
					persistent_event_target:rh_title = {
						holder_scope = { character = FROM }
					}
				}
			}
		}
	}
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTADRD304
		FROM = { 
			event_target:request_artifact = {
				transfer_artifact = { from = ROOT to = FROM }
				if = {
					limit = {
						has_flag = divine_right_regalia
						is_artifact_active = yes
					}
					hidden_tooltip = {
						drd_artifact_add_dead_crown_trait_to_prev = yes  #SEE DRD_artifact_effects.txt
					}
				}
			}
			hidden_tooltip = { character_event = { id = DRD.212 } }
		}
		hidden_tooltip = { repeat_event = { id = DRD.399 } }
	}

	option = {
		name = {
			text = EVTOPTZDRD300_not_under_ruler
			trigger = {
				FROM = {
					independent = yes
					OR = {
						is_tributary = no
						NOT = { is_tributary = { suzerain = ROOT } }
					}
				}
			}
		}
		name = {
			text = EVTOPTZDRD300_ruler_is_liege_or_suzerain
			trigger = {
				FROM = {
					OR = {
						is_vassal_or_below_of = ROOT
						AND = {
							is_tributary = { suzerain = ROOT }
							NOT = { is_tributary = { suzerain = ROOT type = rh_protection } }
						}
					}
				}
			}
		}
		name = {
			text = EVTOPTZDRD300_ruler_is_protector
			trigger = {
				FROM = {
					is_tributary = { suzerain = ROOT type = rh_protection }
				}
			}
		}
		if = {
			limit = { FROM = { is_tributary = { suzerain = ROOT type = rh_protection } } }
			remove_tributary = FROM
			hidden_tooltip = { FROM = { letter_event = { id = DRD.211 } } }
		}
		else = {
			hidden_tooltip = { FROM = { character_event = { id = DRD.210 } } }
		}
		if = {
			limit = { check_variable = { which = local_request_reasonable value = 1 } }
			reverse_opinion = { who = FROM modifier = drd_opinion_refused_reasonable_request }
		}
		else = {
			hidden_tooltip = { opinion = { who = FROM modifier = drd_opinion_made_unreasonable_request } }
		}
		custom_tooltip = { text = coronation_canceled }
		ai_chance = {
			factor = 0  #TODO
			modifier = {
				factor = 0
				check_variable = { which = local_request_reasonable value = 1 }
			}
		}
	}
}

letter_event = {  # RH refused to crown ROOT. ROOT = ruler, FROM = temporal RH.
	id = DRD.398
	text = EVTDESCDRD398
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = {
		name = {
			text = EVTOPTADRD398_ruler_is_liege_or_suzerain
			trigger = {
				FROM = {
					OR = {
						is_vassal_or_below_of = ROOT
						is_tributary = { suzerain = ROOT }
					}
				}
			}
		}
		name = {
			text = EVTOPTADRD398_not_under_ruler
			trigger = {
				FROM = {
					NOR = {
						is_vassal_or_below_of = ROOT
						is_tributary = { suzerain = ROOT }
					}
				}
			}
		}
		if = {
			limit = { reverse_has_opinion_modifier = { who = FROM modifier = drd_opinion_refused_reasonable_request } }
			tooltip = { reverse_opinion = { who = FROM modifier = drd_opinion_refused_reasonable_request } }
		}
		else_if = {
			limit = {
				FROM = {
					OR = {
						is_vassal_or_below_of = FROM
						is_tributary = { suzerain = FROM }
					}
				}
			}
			opinion = { who = FROM modifier = drd_opinion_refused_to_crown_me }
			if = {
				limit = { FROM = { is_tributary = { suzerain = ROOT type = rh_protection } } }
				remove_tributary = FROM
			}
		}
		hidden_tooltip = { remove_character_modifier = coronation_request_cooldown }
	}
}

letter_event = {  # Request was fulfilled, link back the vanilla-like event chain. ROOT = ruler, FROM = coronation priest.
	id = DRD.399
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		set_character_flag = flag_crowned_by_fylkir
		mulitiply_variable = { which = local_fylkir_prestige_cost value = -1 }
		remove_opinion = { who = FROM modifier = drd_opinion_refused_to_crown_me }
		remove_opinion = { who = FROM modifier = drd_opinion_made_unreasonable_request }
		FROM = {
			save_event_target_as = coronation_priest 
			opinion = {
				modifier = opinion_supposed_to_crown
				months = 1
				who = ROOT
			}
			reverse_opinion = {
				modifier = opinion_supposed_to_crown
				months = 1
				who = ROOT
			}
			opinion = {
				modifier = opinion_coronation_guest
				months = 4
				who = FROM
			}
			if = {
				limit = {
					OR = {
						is_vassal_or_below_of = ROOT
						is_tributary = { suzerain = ROOT }
					}
				}
				add_character_modifier = {
					name = out_traveling
					duration = 45
				}
			}
			else = {
				add_trait = travelling
			}
		}
		character_event = { id = DRD_HF.20300 }  #SEE DRD_HF_coronation_events.txt
	}
}
