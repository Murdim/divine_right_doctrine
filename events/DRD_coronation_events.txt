#DRD-FILE
#SEE DRD_HF_coronation_events.txt: additional events for the coronation chain.

namespace=DRD  # 200-499
# 200-299: pre-coronation requests, RH reactions.
# 300-399: pre-coronation request acceptance, rejection & fulfillment.
# 400-499: other, e.g coronation ceremony, rh_protection related events.

character_event = {  # Debug event.
	id = DRD.9200
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		religion_head = {
			opinion = { who = ROOT modifier = drd_opinion_making_request }
			letter_event = { id = DRD.200 }
		}
	}
}

letter_event = {  # ROOT = temporal RH, FROM = ruler requesting their full sanction.
	id = DRD.200
	desc = EVTDESCDRD200
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }

	immediate = {  # Set up some values for the entire chain when this event is fired for the first time (not when a player goes back to it).
		if = {
			limit = { is_variable_equal = { which = local_request_rule value = 0 } }

			# Some factors fundamentally affect the available choices and their consequences, check them now and store them as a "rule".
			set_variable = { which = local_request_rule value = 1 }  # Rule 1 is used by default.
			if = {  # Rule 2: If you already owe a coronation to FROM, it proceeds without waiting for your answer.
				limit = { has_opinion_modifier = { who = FROM modifier = drd_opinion_fulfilled_request } }
				set_variable = { which = local_request_rule value = 2 }
				hidden_tooltip = { FROM = { character_event = { id = DRD.399 } } }
			}
			else = {
				if = {  # Rule 3: If FROM cannot require you to crown them, you are free to do whatever you want.
					limit = {  # Either recently rejected a reasonable request, or an open enemy (military or otherwise).
						OR = {
							has_opinion_modifier = { who = FROM modifier = drd_opinion_refused_reasonable_request }
							FROM = { is_foe = ROOT }  # Rival OR committed a crime against you.
							war_with = FROM  # Should never happen since FROM is always (for now) our de facto liege.
						}
					}
					set_variable = { which = local_request_rule value = 3 }
				}  # Otherwise, you are expected to make a reasonable request.
				if = {  # Human players in MP games must answer within two months, or they will give an automatic response.
					limit = {
						ai = no
						multiplayer = yes
					}
					character_event = { id = DRD.204 days = 60 }
				}
			}

			# Compute the prestige hit that will be applied at the end of the coronation chain.
			if = {
				limit = { relative_power = { who = FROM power = 1.5 } }
				set_variable = { which = local_fylkir_prestige_cost value = 5000 }
			}
			else_if = {
				limit = { relative_power = { who = FROM power = 1 } }
				set_variable = { which = local_fylkir_prestige_cost value = 3000 }
			}
			else_if = {
				limit = { relative_power = { who = FROM power = 0.75 } }
				set_variable = { which = local_fylkir_prestige_cost value = 2000 }
			}
			else_if = {
				limit = { relative_power = { who = FROM power = 0.5 } }
				set_variable = { which = local_fylkir_prestige_cost value = 1200 }
			}
			else_if = {
				limit = { relative_power = { who = FROM power = 0.25 } }
				set_variable = { which = local_fylkir_prestige_cost value = 600 }
			}
			else = {
				set_variable = { which = local_fylkir_prestige_cost value = 300 }
			}
			if = {  # Base value is capped at 100 + 40% of current prestige (if positive).
				limit = { prestige = 0 }
				export_to_variable = { which = local_fylkir_prestige_max value = prestige }
				multiply_variable = { which = local_fylkir_prestige_max value = 0.4 }
			}
			change_variable = { which = local_fylkir_prestige_max value = 100 }
			if = {
				check_variable = { which = local_fylkir_prestige_max which = local_fylkir_prestige_cost }
				set_variable = { which = local_fylkir_prestige_cost which = local_fylkir_prestige_max }
			}
			change_variable = { which = local_fylkir_prestige_max value = 0 }
		}

		if = {  # Small money request: highest between 0.5x the ruler's yearly income and 300.
			limit = { is_variable_equal = { which = local_min_request_money value = 0 } }
			# Large money request: 3x the lowest yearly income between ruler and head, unused if lower than the above.
			export_to_variable = { which = local_max_request_money value = yearly_income }
			FROM = { export_to_variable = { which = local_min_request_money value = yearly_income } }
			if = {
				limit = { check_variable = { which = local_max_request_money which = local_min_request_money } }
				set_variable = { which = local_max_request_money which = local_min_request_money }
			}
			multiply_variable = { which = local_max_request_money value = 3 }
			multiply_variable = { which = local_min_request_money value = 0.5 }
			if = {
				limit = { NOT = { check_variable = { which = local_min_request_money value = 300 } } }
				set_variable = { which = local_min_request_money value = 300 }
			}
		}

		if = {
			limit = { FROM = { ai = no } }  # For l10 purposes only.
			any_demesne_title = {
				limit = { controls_religion = yes }
				save_event_target_as = rh_title
			}
		}
	}

	option = {  # Political requests: land (if unlanded), favor, overthrowing self-crowned rulers.
		name = EVTOPTADRD200
		trigger = { NOT = { is_variable_equal = { which = local_request_rule value = 2 } } }
		custom_tooltip = { text = drd_request_prestige_cost_warning }
		hidden_tooltip = { repeat_event = { id = DRD.201 } }
	}

	option = {  # Other requests: money, religious artifact...
		name = EVTOPTBDRD200
		trigger = { NOT = { is_variable_equal = { which = local_request_rule value = 2 } } }
		custom_tooltip = { text = drd_request_prestige_cost_warning }
		hidden_tooltip = { repeat_event = { id = DRD.202 } }
	}

	option = {  # Unreasonable demands. May incite FROM to crown themselves instead.
		name = EVTOPTCDRD200
		trigger = { NOT = { is_variable_equal = { which = local_request_rule value = 2 } } }
		custom_tooltip = { text = drd_request_prestige_cost_warning }
		if = {
			limit = { NOT = { is_variable_equal = { which = local_request_rule value = 3 } } }
			custom_tooltip = { text = drd_unreasonable_request_warning }
		}
		hidden_tooltip = { repeat_event = { id = DRD.203 } }
	}

	option = {  # No choice, FROM already fulfilled a previous request for you.
		name = EVTOPTEDRD200
		trigger = { is_variable_equal = { which = local_request_rule value = 2 } }
		custom_tooltip = { text = drd_request_prestige_cost_warning }
	}

	option = {  # Refuse. Dangerous unless FROM recently rejected a reasonable request.
		name = EVTOPTYDRD200
		trigger = { NOT = { is_variable_equal = { which = local_request_rule value = 2 } } }
		if = {
			limit = { NOT = { is_variable_equal = { which = local_request_rule value = 3 } } }
			custom_tooltip = { text = drd_refuse_to_crown_warning }
			tooltip = { reverse_opinion = { who = FROM modifier = drd_opinion_refused_to_crown_me } }
		}
		hidden_tooltip = { FROM = { letter_event = { id = DRD.398 } } }
	}
}

letter_event = {
	id = DRD.201
	desc = EVTDESCDRD200
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }

	immediate = {
		if = {
			limit = {
				NOT = {
					any_demesne_title = {
						tier = COUNT
						is_titular = no
					}
				}
			}
			FROM = {
				random_demesne_title = {
					limit = {
						can_be_given_away = yes
						tier = COUNT
						is_feudal = yes
						is_titular = no
						location = { is_capital = no }
						
					}
					preferred_limit = {
						any_direct_de_jure_vassal_title = {
							is_holy_site = ROOT
						}
					}
					preferred_limit = { claimed_by = ROOT }  # Claims: direct > ducal > kingdom.
					preferred_limit = { dejure_liege_title = { holder_scope = { character = ROOT } } }
					preferred_limit = { kingdom = { holder_scope = { character = ROOT } } }
					preferred_limit = {  # Already holds a barony in the province.
						any_direct_de_jure_vassal_title = { holder_scope = { character = ROOT } }
					}
					preferred_limit = {  # Holy site in the province.
						any_direct_de_jure_vassal_title = { is_holy_site = ROOT }
					}
					save_event_target_as = request_county
				}
			}
		}
		any_independent_ruler = {
			limit = {
				religion = ROOT
				trait = crowned_by_myself
				religion = persistent_event_target:coronation_religion
				higher_real_tier_than = DUKE
				controls_religion = no
			}
			preferred_limit = { 
				OR = {
					has_character_modifier = drd_schismatic_ruler
					has_character_modifier = drd_schismatic_ruler_clergyless
				}
			}
			save_event_target_as = request_schismatic_ruler
		}
	}

	option = {  # Use, or owe, a favor.
		name = {
			text = EVTOPTADRD201_repay_favor
			trigger = { owes_favor_to = FROM }
		}
		name = {
			text = EVTOPTADRD201_gain_favor
			trigger = { NOT = { owes_favor_to = FROM } }
		}
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			FROM = { letter_event = { id = DRD.300 } }
		}
	}

	option = {  # If not holding any province, ask for a Count-tier title.
		name = EVTOPTBDRD201
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_county = { can_be_given_away = yes }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_county = { save_event_target_as = request_title }
			FROM = { letter_event = { id = DRD.302 } }
		}
	}

	option = {  # Overthrow a self-crowned ruler.
		name = EVTOPTCDRD201
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_schismatic_ruler = { always = yes }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			FROM = { letter_event = { id = DRD.301 } }
		}
	}

	option = {  # Go back.
		name = EVTOPTZDRD200
		hidden_tooltip = {
			clear_event_target = request_county
			repeat_event = { id = DRD.200 }
		}
		ai_chance = { factor = 0 }
	}
}

letter_event = {
	id = DRD.202
	desc = EVTDESCDRD200
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }

	immediate = {
		any_demesne_title = {
			limit = { controls_religion = yes }
			persistent_event_target:rh_artifact = {
				if = {
					limit = { NOT = { owner = { character = ROOT } } }
					save_event_target_as = request_lost_rh_artifact
				}
			}
		}
		FROM = {
			random_artifact = {
				limit = {
					artifact_can_be_gifted_to = ROOT  # Artifact crowns are never allowed as gifts.
					OR = {
						has_flag = religious
						has_flag = about_religion
					}
					original_owner = { religion = ROOT }
					NOT = { quality = 4 }
				}
				preferred_limit = { quality = 3 }
				preferred_limit = { quality = 2 }
				save_event_target_as = request_random_artifact
			}
		}
	}

	option = {  # Ask for a reasonable amount of money.
		name = EVTOPTADRD202
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			set_variable = { which = local_request_money which = local_min_request_money }
			FROM = { letter_event = { id = DRD.303 } }
		}
	}

	option = {  # FROM has our crown, ask them to return it.
		name = EVTOPTBDRD202_give_artifact
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_lost_rh_artifact = { owner = { character = FROM } }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_lost_rh_artifact = { save_event_target_as = request_artifact }
			FROM = { letter_event = { id = DRD.304 } }
		}
	}

	option = {  #TODO Ask FROM to retrieve our lost crown.
		name = EVTOPTBDRD202_retrieve_artifact
		trigger = {
			always = no
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_lost_rh_artifact = { owner = { NOT = { character = FROM } } }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_lost_rh_artifact = { save_event_target_as = request_artifact }
			hidden_tooltip = { repeat_event = { id = DRD.200 } }
		}
	}

	option = {  # Ask for a minor religious artifact.
		name = EVTOPTCDRD202
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_random_artifact = { artifact_can_be_gifted_to = ROOT }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_random_artifact = { save_event_target_as = request_artifact }
			FROM = { letter_event = { id = DRD.304 } }
		}
	}

	option = {  # Go back.
		name = EVTOPTZDRD200
		hidden_tooltip = {
			clear_event_target = request_lost_rh_artifact
			clear_event_target = request_random_artifact
			repeat_event = { id = DRD.200 }
		}
		ai_chance = { factor = 0 }
	}
}

letter_event = {
	id = DRD.203
	desc = EVTDESCDRD200
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes
	trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }

	immediate = {	
		set_variable = { which = local_unreasonable value = 1 }
		FROM = {
			if = {
				limit = {
					ROOT = {
						any_demesne_title = {
							tier = COUNT
							is_titular = no
						}
					}
				}
				random_demesne_title = {
					limit = {
						can_be_given_away = yes
						tier = COUNT
						is_feudal = yes
						is_titular = no
						location = { is_capital = no }
					}
					preferred_limit = { claimed_by = ROOT }  # Claims: direct > ducal > kingdom.
					preferred_limit = { dejure_liege_title = { holder_scope = { character = ROOT } } }
					preferred_limit = { kingdom = { holder_scope = { character = ROOT } } }
					preferred_limit = {  # Already holds a barony in the province.
						any_direct_de_jure_vassal_title = { holder_scope = { character = ROOT } }
					}
					preferred_limit = {  # Neighboring province.
						location = {
							any_neighbor_province = {
								owner = {
									OR = {
										character = ROOT
										is_vassal_or_below_of = ROOT
									}
								}
							}
						}
					}
					preferred_limit = {  # Holy site in the province.
						any_direct_de_jure_vassal_title = { is_holy_site = ROOT }
					}
					save_event_target_as = request_county
				}
			}
			random_artifact = {
				limit = {
					artifact_can_be_gifted_to = ROOT  # Artifact crowns are never allowed as gifts.
					NAND = {  # Not an artifact that the reasonable option could have picked.
						OR = {
							has_flag = religious
							has_flag = about_religion
						}
						original_owner = { religion = ROOT }
						NOT = { quality = 4 }
					}
				}
				preferred_limit = { quality = 5 }
				preferred_limit = { quality = 4 }
				preferred_limit = { quality = 3 }
				preferred_limit = { quality = 2 }
				save_event_target_as = request_random_artifact
			}
		}
	}

	option = {  # Ask for a large amount of money, if strictly larger than the reasonable one.
		name = EVTOPTADRD203
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			NOT = { check_variable = { which = local_min_request_money which = local_max_request_money } }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			set_variable = { which = local_request_money which = local_max_request_money }
			FROM = { letter_event = { id = DRD.303 } }
		}
	}

	option = {  # Ask for a new Count-tier title.
		name = EVTOPTBDRD203
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_county = { can_be_given_away = yes }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_county = { save_event_target_as = request_title }
			FROM = { letter_event = { id = DRD.302 } }
		}
	}

	option = {  # Ask for one of their most valuable artifacts.
		name = EVTOPTCDRD203
		trigger = {
			has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_random_artifact = { artifact_can_be_gifted_to = ROOT }
		}
		hidden_tooltip = {
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			event_target:request_random_artifact = { save_event_target_as = request_artifact }
			FROM = { letter_event = { id = DRD.304 } }
		}
	}

	option = {  # Go back.
		name = EVTOPTZDRD200
		hidden_tooltip = {
			set_variable = { which = local_unreasonable value = 0 }
			clear_event_target = request_county
			clear_event_target = request_random_artifact
			repeat_event = { id = DRD.200 }
		}
		ai_chance = { factor = 0 }
	}
}

character_event = {  # Automatic answer after two months.
	id = DRD.204
	desc = {
		text = EVTDESCDRD204_refuse
		trigger = { check_variable = { which = local_request_rule value = 3 } }
	}
	desc = {
		text = EVTDESCDRD204_money
		trigger = { NOT = { check_variable = { which = local_request_rule value = 3 } } }
	}
	picture = GFX_evt_bishop
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }

	immediate = {
		remove_opinion = { who = FROM modifier = drd_opinion_making_request }
		if = {  # Refuse to crown if allowed to do so.
			limit = { check_variable = { which = local_request_rule value = 3 } }
			FROM = { letter_event = { id = DRD.398 } }
		}
		else = {  # Otherwise, ask for money.
			limit = { is_vassal_or_below_of = FROM }
			set_variable = { which = local_request_money value = local_min_request_money }
			FROM = { letter_event = { id = DRD.303 } }
		}
	}

	option = {
		name = OK
	}
}

character_event = {  # Request was rejected (notification). ROOT = temporal RH, FROM = ruler.
	id = DRD.210
	desc = EVTDESCDRD210

	is_triggered_only = yes
	notification = yes

	option = {
		name = OK
	}
}

character_event = {  # Request was accepted (notification). ROOT = temporal RH, FROM = ruler.
	id = DRD.212
	desc = EVTDESCDRD212

	is_triggered_only = yes
	notification = yes

	option = {
		name = OK
	}
}

character_event = {  # Fulfilled a request made by a previous RH. ROOT = new RH, FROM = ruler.
	id = DRD.250
	text = EVTDESCDRD250  # May be extended for other delayed requests if needed.
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }

	immediate = {
		if = {
			limit = {
				ai = no
				multiplayer = yes
			}
			character_event = { id = DRD.251 days = 30 }
		}
	}

	option = {
		name = EVTOPTADRD250
		if = {
			limit = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			hidden_tooltip = { FROM = { character_event = { id = DRD.350 } }
		ai_chance = {
			factor = 10
		}
	}

	option = {
		name = EVTOPTBDRD250
		if = {
			limit = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }
			remove_opinion = { who = FROM modifier = drd_opinion_making_request }
			custom_tooltip = { text = drd_refuse_to_crown_warning }
			tooltip = { reverse_opinion = { who = FROM modifier = drd_opinion_refused_to_crown_me } }
			hidden_tooltip = { FROM = { character_event = { id = DRD.351 } }
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				NOT = { FROM = { is_foe = ROOT } }
			}
		}
	}
}

character_event = {  # Automatic answer after 30 days.
	id = DRD.251
	text = EVTDESCDRD251
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	trigger = { has_opinion_modifier = { who = FROM modifier = drd_opinion_making_request } }

	immediate = {
		remove_opinion = { who = FROM modifier = drd_opinion_making_request }
		FROM = { character_event = { id = DRD.350 }
	}

	option = {
		name = OK
	}
}

letter_event = {  # Request a favor. ROOT = ruler, FROM = temporal RH.
	id = DRD.300
	desc = {
		text = EVTDESCDRD300_use_favor
		trigger = { holds_favor_on = FROM }
	}
	desc = {
		text = EVTDESCDRD300_owe_favor
		trigger = { NOT = { holds_favor_on = FROM } }
	}
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTADRD300
		if = {
			limit = { holds_favor_on = FROM }
			reverse_remove_favor = FROM
		}
		else = {
			add_favor = FROM
		}
		hidden_tooltip = {
			FROM = { character_event = { id = DRD.212 } }
			repeat_event = { id = DRD.399 }
		}
	}

	option = {
		name = EVTOPTZDRD300_reasonable
		hidden_tooltip = { FROM = { character_event = { id = DRD.210 } } }
		custom_tooltip = { text = coronation_canceled }
		custom_tooltip = { text = coronation_refuse_reasonable_request }
		reverse_opinion = { who = FROM modifier = drd_opinion_refused_reasonable_request }
		ai_chance = {
			factor = 0
		}
	}
}

letter_event = {  # Request to overthrow event_target:request_schismatic_ruler. ROOT = ruler, FROM = temporal RH.
	id = DRD.301
	desc = EVTDESCDRD301
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	immediate = {
		opinion = {
			who = event_target:request_schismatic_ruler
			modifier = drd_opinion_request_overthrow_schismatic
		}
	}

	option = {
		name = EVTOPTADRD301
		trigger = {
			can_use_cb = {
				target = event_target:request_schismatic_ruler
				casus_belli = drd_overthrow
			}
		}
		religion_head = {
			opinion = { who = ROOT modifier = drd_opinion_ongoing_request }
		}
		war = {
			target = event_target:request_schismatic_ruler
			casus_belli = drd_overthrow
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				war = yes  # Should not happen.
			}
		}
	}

	option = {
		name = EVTOPTBDRD301
		religion_head = {
			opinion = { who = ROOT modifier = drd_opinion_ongoing_request }
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				can_use_cb = {
					target = event_target:request_schismatic_ruler
					casus_belli = drd_overthrow
				}
				war = no
			}
		}
	}

	option = {
		name = EVTOPTZDRD300_reasonable
		hidden_tooltip = { FROM = { character_event = { id = DRD.210 } } }
		custom_tooltip = { text = coronation_canceled }
		custom_tooltip = { text = coronation_refuse_reasonable_request }
		reverse_opinion = { who = FROM modifier = drd_opinion_refused_reasonable_request }
		ai_chance = {
			factor = 0
		}
	}
}

letter_event = {  # Request for event_target:request_title. ROOT = ruler, FROM = temporal RH
	id = DRD.302
	desc = {
		text = EVTDESCDRD302_unreasonable
		trigger = { check_variable = { which = local_unreasonable value = 1 } }
	}
	desc = {
		text = EVTDESCDRD302_reasonable
		trigger = { NOT = { check_variable = { which = local_unreasonable value = 1 } } }
	}
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTADRD302
		FROM = {
			liege = { save_event_target_as = previous_liege }
			grant_title = event_target:request_title
			set_defacto_liege = event_target:previous_liege
			event_target:request_title = {
				if = {
					limit = { tier = DUKE }
					any_direct_de_jure_vassal_title = {
						limit = {
							holder_scope = { tier = COUNT }
							location = { is_capital = yes }
						}
						set_defacto_liege = event_target:previous_liege
					}
				}
			}
			hidden_tooltip = { character_event = { id = DRD.212 } }
		}
		hidden_tooltip = { repeat_event = { id = DRD.399 } }
	}

	option = {
		name = {
			text = EVTOPTZDRD300_unreasonable
			trigger = { check_variable = { which = local_unreasonable value = 1 } }
		}
		name = {
			text = EVTOPTZDRD300_reasonable
			trigger = { NOT = { check_variable = { which = local_unreasonable value = 1 } } }
		}
		hidden_tooltip = { FROM = { character_event = { id = DRD.210 } } }
		custom_tooltip = { text = coronation_canceled }
		if = {
			limit = { check_variable = { which = local_unreasonable value = 1 } }
			if = {
				limit = { NOT = { check_variable = { which = local_request_rule value = 3 } } }
				custom_tooltip = { text = coronation_refuse_unreasonable_request }
				opinion = { who = FROM modifier = drd_opinion_made_unreasonable_request }
			}
		}
		else = {
			custom_tooltip = { text = coronation_refuse_reasonable_request }
			reverse_opinion = { who = FROM modifier = drd_opinion_refused_reasonable_request }
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				NOT = { check_variable = { which = local_unreasonable value = 1 } }
			}
		}
	}
}

letter_event = {  # Request for local_request_money ducats. ROOT = ruler, FROM = temporal RH.
	id = DRD.303
	desc = {
		text = EVTDESCDRD303_unreasonable
		trigger = { check_variable = { which = local_unreasonable value = 1 } }
	}
	desc = {
		text = EVTDESCDRD303_reasonable
		trigger = { NOT = { check_variable = { which = local_unreasonable value = 1 } } }
	}
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	immediate = {
		set_variable = { which = local_request_money which = local_request_money_neg }
		multiply_variable = { which = local_request_money_neg value = -1 }
	}

	option = {
		name = EVTOPTADRD303
		wealth = local_request_money_neg
		hidden_tooltip = {
			FROM = {
				wealth = local_request_money
				character_event = { id = DRD.212 }
			}
			repeat_event = { id = DRD.399 }
		}
	}

	option = {
		name = {
			text = EVTOPTZDRD300_unreasonable
			trigger = { check_variable = { which = local_unreasonable value = 1 } }
		}
		name = {
			text = EVTOPTZDRD300_reasonable
			trigger = { NOT = { check_variable = { which = local_unreasonable value = 1 } } }
		}
		hidden_tooltip = { FROM = { character_event = { id = DRD.210 } } }
		custom_tooltip = { text = coronation_canceled }
		if = {
			limit = { check_variable = { which = local_unreasonable value = 1 } }
			if = {
				limit = { NOT = { check_variable = { which = local_request_rule value = 3 } } }
				custom_tooltip = { text = coronation_refuse_unreasonable_request }
				opinion = { who = FROM modifier = drd_opinion_made_unreasonable_request }
			}
		}
		else = {
			custom_tooltip = { text = coronation_refuse_reasonable_request }
			reverse_opinion = { who = FROM modifier = drd_opinion_refused_reasonable_request }
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				NOT = { check_variable = { which = local_unreasonable value = 1 } }
			}
		}
	}

	after = {
		set_variable = { which = local_request_money_neg value = 0 }
	}
}

letter_event = {  # Request for event_target:request_artifact. ROOT = ruler, FROM = temporal RH.
	id = DRD.304
	desc = {
		text = EVTDESCDRD304_rh_crown
		trigger = {
			event_target:request_artifact = {
				has_flag = divine_right_regalia
				persistent_event_target:rh_title = {
					holder_scope = { character = FROM }
				}
			}
		}
	}
	desc = {
		text = EVTDESCDRD304_other
		trigger = {
			NOT = {
				event_target:request_artifact = {
					has_flag = divine_right_regalia
					persistent_event_target:rh_title = {
						holder_scope = { character = FROM }
					}
				}
			}
		}
	}
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTADRD304
		FROM = { 
			event_target:request_artifact = {
				transfer_artifact = { from = ROOT to = FROM }
				if = {
					limit = {
						has_flag = divine_right_regalia
						is_artifact_active = yes
					}
					hidden_tooltip = {
						drd_artifact_add_dead_crown_trait_to_prev = yes  #SEE DRD_artifact_effects.txt
					}
				}
			}
			hidden_tooltip = { character_event = { id = DRD.212 } }
		}
		hidden_tooltip = { repeat_event = { id = DRD.399 } }
	}

	option = {
		name = {
			text = EVTOPTZDRD300_unreasonable
			trigger = { check_variable = { which = local_unreasonable value = 1 } }
		}
		name = {
			text = EVTOPTZDRD300_reasonable
			trigger = { NOT = { check_variable = { which = local_unreasonable value = 1 } } }
		}
		hidden_tooltip = { FROM = { character_event = { id = DRD.210 } } }
		custom_tooltip = { text = coronation_canceled }
		if = {
			limit = { check_variable = { which = local_unreasonable value = 1 } }
			if = {
				limit = { NOT = { check_variable = { which = local_request_rule value = 3 } } }
				custom_tooltip = { text = coronation_refuse_unreasonable_request }
				opinion = { who = FROM modifier = drd_opinion_made_unreasonable_request }
			}
		}
		else = {
			custom_tooltip = { text = coronation_refuse_reasonable_request }
			reverse_opinion = { who = FROM modifier = drd_opinion_refused_reasonable_request }
		}
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				NOT = { check_variable = { which = local_unreasonable value = 1 } }
			}
		}
	}
}

character_event = {  # Fulfilled a non-instantaneous request (e.g war), the coronation can proceed. ROOT = ruler, FROM = FROM.
	id = DRD.350
	text = EVTDESCDRD350  # May be extended for other delayed requests if needed.
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTADRD350
		hidden_tooltip = { repeat_event = { id = DRD.399 } }
	}
}

character_event = {  # RH refuses to crown you after fulfilling a request for their predecessor. ROOT = ruler, FROM = FROM.
	id = DRD.351
	text = EVTDESCDRD351
	picture = GFX_evt_crusaders
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTBDRD351
		custom_tooltip = { text = coronation_refuse_unreasonable_request }
		opinion = { who = FROM modifier = drd_opinion_refused_to_crown_me }
		hidden_tooltip = { remove_character_modifier = coronation_request_cooldown }
	}
}

letter_event = {  # RH refused to crown ROOT. ROOT = ruler, FROM = temporal RH.
	id = DRD.398
	text = EVTDESCDRD398
	border = GFX_event_letter_frame_religion

	is_triggered_only = yes

	option = {
		name = {
			text = EVTOPTADRD398_justified
			trigger = { check_variable = { which = local_request_rule value = 3 } }
		}
		name = {
			text = EVTOPTADRD398_unjustified
			trigger = { NOT = { check_variable = { which = local_request_rule value = 3 } } }
		}
		if = {
			limit = { NOT = { check_variable = { which = local_request_rule value = 3 } } }
			custom_tooltip = { text = coronation_refuse_unreasonable_request }
			opinion = { who = FROM modifier = drd_opinion_refused_to_crown_me }
			hidden_tooltip = { remove_character_modifier = coronation_request_cooldown }
		}
	}
}

letter_event = {  # Request was fulfilled, link back the vanilla-like event chain. ROOT = ruler, FROM = coronation priest.
	id = DRD.399
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		set_character_flag = flag_crowned_by_fylkir
		mulitiply_variable = { which = local_fylkir_prestige_cost value = -1 }
		remove_opinion = { who = FROM modifier = drd_opinion_refused_to_crown_me }
		remove_opinion = { who = FROM modifier = drd_opinion_made_unreasonable_request }
		FROM = {
			save_event_target_as = coronation_priest 
			opinion = {
				modifier = opinion_supposed_to_crown
				months = 1
				who = ROOT
			}
			reverse_opinion = {
				modifier = opinion_supposed_to_crown
				months = 1
				who = ROOT
			}
			opinion = {
				modifier = opinion_coronation_guest
				months = 4
				who = FROM
			}
			add_character_modifier = {
				name = out_traveling
				duration = 45
			}
		}

		set_variable = { which = local_request_rule value = 0 }
		set_variable = { which = local_unreasonable value = 0 }
		set_variable = { which = local_min_request_money value = 0 }
		set_variable = { which = local_max_request_money value = 0 }
		clear_event_target = request_county
		clear_event_target = request_schismatic_ruler
		clear_event_target = request_lost_rh_artifact
		clear_event_target = request_random_artifact

		character_event = { id = DRD_HF.20300 }  #SEE DRD_HF_coronation_events.txt
	}
}

character_event = {
	id = DRD.400
	title = EVTTITLEDRD400
	desc = EVTDESCDRD400
	picture = GFX_evt_a_crowning_ceremony
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes
	trigger = { 
		event_target:coronation_priest = { is_alive = yes } #Check if the priest supposed to be crowning you is still alive.
		event_target:coronation_ruler = { is_alive = yes } #Check if the ruler supposed to be crowned is still alive. (check for guests)
	}

	option = {  # Religious heads can declare a rivalry with the self-crowned ruler.
		name = EVTOPTADRD400
		trigger = { controls_religion = yes }
		add_rival = FROM
		opinion = { who = FROM modifier = drd_opinion_schismatic }
		opinion = { who = event_target:coronation_priest modifier = drd_opinion_schismatic }
		tooltip = { religion_authority = { modifier = self_crowned_schismatic_tmp } }
		hidden_tooltip = { FROM = { character_event = { id = DRD.401 } } }
		ai_chance = {
			factor = 50
		}
	}

	option = {  # Otherwise, they'll still be denounced as schismatic by the RH and any RH-crowned ruler.
		name = EVTOPTBDRD400
		trigger = {
			OR = {
				controls_religion = yes
				AND = {
					independent = yes
					trait = crowned_by_pope
					religion = persistent_event_target:coronation_religion
				}
			}
			NAND = {  # RHs can only pick the first option if the ruler was already an enemy.
				controls_religion = yes
				FROM = { is_foe = ROOT }
			}
		}
		opinion = { who = FROM modifier = drd_opinion_schismatic }
		opinion = { who = event_target:coronation_priest modifier = drd_opinion_schismatic }
		tooltip = { religion_authority = { modifier = self_crowned_schismatic_tmp } }
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				controls_religion = yes
				OR = {
					trait = ambitious
					trait = proud
					trait = zealous
					NOT = { lower_tier_than = FROM }
				}
			}
			modifier = {
				factor = 10
				is_vassal_or_below_of = FROM
			}
			modifier = {
				factor = 2
				trait = content
			}
		}
	}

	option = {  # Other rulers can only observe.
		name = EVTOPTCDRD400
		trigger = {
			NOR = {
				controls_religion = yes
				AND = {
					independent = yes
					trait = crowned_by_pope
					religion = persistent_event_target:coronation_religion
				}
			}
		}
		tooltip = { religion_authority = { modifier = self_crowned_schismatic_tmp } }
	}
}

character_event = {
	id = DRD.401
	desc = EVTDESCDRD401
	picture = GFX_evt_catching_heretic
	border = GFX_event_normal_frame_religion

	is_triggered_only = yes

	option = {
		name = EVTOPTADRD401
		tooltip = { add_rival = FROM }
	}
}

character_event = {  # Wait for the first day of the next month.
	id = DRD.402
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		export_to_variable = { which = local_current_day value = day }
		if = {
			limit = { is_variable_equal = { which = local_current_day value = 0 } }
			repeat_event = { id = DRD.403 }
		}
		else = {
			repeat_event = { id = DRD.402 days = 1 }
		}
	}
}

character_event = {  # Monthly self-coronation upkeep event.
	id = DRD.403
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		if = {
			limit = {
				trait = crowned_by_myself
				religion = persistent_event_target:coronation_religion
				independent = yes
				higher_real_tier_than = DUKE
				controls_religion = no
			}
			religion_authority = { modifier = self_crowned_schismatic }

			if = {  # Additional penalties for rulers who had no justification for defying their RH.
				limit = {
					has_flag = flag_crowned_by_myself_unjustified
				}
				if = {  # Restore the Schismatic Ruler modifier if it was lost (e.g by converting).
					limit = {
						NOR = {
							has_character_modifier = drd_schismatic_ruler
							has_character_modifier = drd_schismatic_ruler_clergyless
						}
					}
					if = {
						limit = {
							drd_religion_has_a_clergy = yes  #SEE DRD_common_triggers.txt
						}
						add_character_modifier = {
							name = drd_schismatic_ruler
							days = -1
						}
					}
					else = {
						add_character_modifier = {
							name = drd_schismatic_ruler_clergyless
							days = -1
						}
					}
				}
				religion_head = {  # New religious heads inherit the opinion penalty.
					if = {
						limit = { NOT = { has_opinion_modifier = { who = FROM modifier = drd_opinion_schismatic } } }
						opinion = { who = FROM modifier = drd_opinion_schismatic }
					}
				}
				any_independent_ruler = {  # Also apply it to any new RH-crowned ruler.
					limit = {
						religion = ROOT
						trait = crowned_by_pope
						religion = persistent_event_target:coronation_religion
						controls_religion = no
						NOT = { has_opinion_modifier = { who = FROM modifier = drd_opinion_schismatic } }
					}
					opinion = { who = FROM modifier = drd_opinion_schismatic }
				}
			}
		}
		else = {
			remove_character_modifier = drd_schismatic_ruler
			remove_character_modifier = drd_schismatic_ruler_clergyless
		}
		repeat_event = { id = DRD.402 months = 1 }  # Repeat at the start of every month.
	}
}
